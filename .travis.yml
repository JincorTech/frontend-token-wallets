sudo: required
services:
- docker
branches:
  only:
  - master
  - develop
script:
- export ENV_FILE=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "prod"; else echo
  "stage"; fi`
- export TAG=`if [ "$TRAVIS_BRANCH" == "master" ];  then echo "production"; elif [
  "$TRAVIS_BRANCH" == "develop" ]; then echo "stage"; else echo "dev-$(git rev-parse
  --short HEAD)"; fi`
- docker build --no-cache -t jincort/frontend-token-wallet-develop:${TAG} .
- docker run --rm -v $(pwd):/usr/src/app jincort/frontend-token-wallet-develop:${TAG}
  /bin/sh -c "yarn && cp -r .env.${ENV_FILE} .env && yarn build && yarn run lint:all"
after_success:
- export DOCKERFILE=`if [ "$TRAVIS_BRANCH" == "develop" ]; then echo "Dockerfile.stage";
  else echo "Dockerfile.prod" ; fi`
- docker build -f $DOCKERFILE --no-cache -t jincort/frontend-token-wallet:${TAG} .
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- docker push jincort/frontend-token-wallet-develop:${TAG}
- docker push jincort/frontend-token-wallet:${TAG}
notifications:
  slack:
    secure: oGnJkONJm60DnZVulqfKBEexbYuroJ8LToVl1Zdo94OqkH62unDaSk4+996xBElWVXTtR0e90YdI/NX/hjz2NCSJqABb2i/YoErwJXNs7QInsviBcnrtO3DreSZtO5tsbYMZlUnTVq/LDg2R9jcHWqDCdLiP+7WQ1lqpjZLz0k+wLJUeNBnP1CM6zERXwIntZ1hayyyrwoa9hty1+7NThkcoD7mO94nm7K+fEC2YC3MjplpWlFoMXs4YRejHiFw7TtMcyBwYtUjUrqhw2F2BE6PM7oK/oXwiNU9cDr60HomQQbapHyVqnRmMKsLnAXC27QaaqYgNSPNhYKm4vJHAGmv7ZW6NSPWeymRBSc3d+JmBFVQG89xCvRiRaa/NS9YWisQT4l3lVMR7xFXllwkRnyxC/y/f88tFK3Qe1Q0+T2DAoMZgwyUe+hp8yeegjNDUVEEHTaIkB1ys+4ZxHMSYs0uI1XgmsatjVG88Hf39bFVUzj7DvjwHhZ0kBUuTZ79BhXiFkj6OQqx5DLhKhE0YyljIuRYdrZI8r6Q+fP2m2nJdWJ5VO/mjet2VLzB/Sk9eOYe8B7Xct0hMmLWp3xJrrcTT7L7ym1JK2B7ZOdsK27x6wviReY/YMwq9NaT9ac8i4haTcXhtH9qJ2vtn8igSz4y6YYsGuMx+2142zKfncOQ=
env:
  global:
  - secure: Y24UZFfSR2/bffHgF5SRrdDRTR8qop0+Fy2M/EjYRq4RrstyzKp4vjAAst9w/hI7G2BeXOenHraIXIchpYfT9rzdmiHQyr0jzci4uU5EUEIH7e6Fvj6+YN20GoSSzbSIZwsqqTU6xtbCIH8WBmq3lRA408otpaqDUlNvzyC9qpU5i6qKQBz/KsrxIOG+HT7fEPAMaWBGydsx44zL9HsUZ0iNtXcBbFuXHDn53AMXxI7UpOIjdlmmIoar72WGfuPaT5+9/zkA6axpoWPvvRuhEKPqcXhjN9NY9veZbXb6xQNR8ypi/8nCGHr8oMy0q7JXOmGga+8ikloBWCr+N8Lwr5i75w6tz16GfTF685Igcj6sckDBlDuoetEANMaxDjeSjn3YhR1yguRRAuxM9QuWYBjQFe9YWBYnmiOJ9kG8WBYWasxVxCrZQAUqkEoSLGGNXqzMFK6bjwoHpNB2wE8ikuFVQ0sbRr4hZSSaDkr2P1D1N2P7O2xIJzBfYWiDPphIHI0IMiF3tBB+AtsQx8+vu2ev9rB16u4EXet7mzu15v17E7XlTb22LXIshSTgeHfnwAWJeM78YAL332/C18a2I/PK3YFXYcscrpaMDe2UeJ3i4xbUfEl2dN57lLaaM5UyIL6Js/swmHo3xy0/mYbyBXbzqAzV3tceQoC69nJjbxU=
  - secure: j8EgDoeNNs7lrDyk7ZrSbPUTC2kpygAdS+zqA8JnEeHcXK93uwn87lvzoOLX3JJC6ECAfrpHY0Zc90o+h2W86STOo0uDBmPLlwEosh80D7m2Zq0DvD6OCXKj1Ua51H4h6lZ/h5J3ujoISM9pozY52xcAynSwM0f27PFkeF/iH+3UHyFduH+ReUaZX7fKSSnV9CzfewDqH6PQIzxoSRSSJtgiEdxByC9or3/EC0/Cp1hAX3bzknQKxBJGe1sulX/QDL5TWV5YOcsZtX7e5npI2F4EAOEzNg908cBrUykx/LLzC6OOD8NwqHNTobKw+qShQjHeavOfuJDODW4Nh6KIvk6TCLQO+H/WV2buww0v+yjWFEU7Kqu3vyVWqLLDOg8s+0TINWG0LbFsyakgn9EJLAq8YQGysxaWNHiPZeaiWNckVJIgDEwBiLiML5Sw6ROig7ZX3HWTb0B3eynKUxMFjBGfhCMuayf4sDgdMJfr5yBO0fqUDJ8QY6oraSGrXXn9aOfE09yTcCGwiqYWU9cwTURsoirsjO7j1sNvdIT+osrUoM7ErrkWfwfaimN5VlZDpJy6hQnQRdZbGLZwH/S2V68aXVBwmhBJA9IZ/SUcD+ZsDXvPigi5gnGqG9VTH8n/J2CJs0tlax+YkdrgvtEYXet9U+NE4nlOonehHw2/jOo=
